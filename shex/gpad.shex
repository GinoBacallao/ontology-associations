BASE <https://w3id.org/ontology_association/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX metatype: <https://w3id.org/biolink/biolinkml/meta/types/>


<Curie> xsd:string

<SymbolType> xsd:string

<NameType> xsd:string

metatype:String xsd:string

metatype:Integer xsd:integer

metatype:Boolean xsd:boolean

metatype:Float xsd:float

metatype:Double xsd:double

metatype:Decimal xsd:decimal

metatype:Time xsd:dateTime

metatype:Date xsd:date

metatype:Datetime xsd:dateTime

metatype:Uriorcurie IRI

metatype:Uri IRI

metatype:Ncname xsd:string

metatype:Objectidentifier IRI

metatype:Nodeidentifier NONLITERAL

<Association>  (
    CLOSED {
       (  $<Association_tes> rdf:type . * ;
          rdf:type [ <Association> ] ?
       )
    } OR @<GpadAssociation>
)

<AssociationDocument>  (
    CLOSED {
       (  $<AssociationDocument_tes> (  &<Document_tes> ;
             rdf:type [ <Document> ] ? ;
             <date_generated> @metatype:String ? ;
             <generated_by> @<Provider> ? ;
             <url> @metatype:String ? ;
             <project_release> @metatype:String ? ;
             <funding> @metatype:String ? ;
             <go_version> @metatype:String ? ;
             <ro_version> @metatype:String ? ;
             <gorel_version> @metatype:String ? ;
             <associations> @<Association> *
          ) ;
          rdf:type [ <AssociationDocument> ] ?
       )
    } OR @<GpadAssociationDocument>
)

<ConjunctionExtensionExpression> CLOSED {
    (  $<ConjunctionExtensionExpression_tes> rdf:type . * ;
       rdf:type [ <ConjunctionExtensionExpression> ] ?
    )
}

<ControlledTerm>  (
    CLOSED {
       (  $<ControlledTerm_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ?
          ) ;
          rdf:type [ <ControlledTerm> ]
       )
    } OR @<OntologyClass> OR @<RelationTerm>
)

<Document>  (
    {
       (  $<Document_tes> rdf:type . * ;
          rdf:type [ <Document> ] ?
       )
    } OR @<AssociationDocument>
)

<GpadAssociation> CLOSED {
    (  $<GpadAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <db_object_ref> @<NamedThing> ;
          <negation> @metatype:Boolean ? ;
          <relation> @<RelationTerm> ? ;
          <ontology_class_ref> @<NamedThing> ;
          <references> @<NamedThing> + ;
          <evidence_type> @<OntologyClass> ;
          <with_or_from> @<NamedThing> * ;
          <interacting_taxon_ref> @<Taxon> * ;
          <annotation_date> @metatype:Datetime ? ;
          <assigned_by> @<Provider> ;
          <annotation_extensions> @<ConjunctionExtensionExpression> * ;
          <annotation_properties> @<PropertyValuePair> *
       ) ;
       rdf:type [ <GpadAssociation> ] ?
    )
}

<GpadAssociationDocument> CLOSED {
    (  $<GpadAssociationDocument_tes> (  &<AssociationDocument_tes> ;
          rdf:type [ <AssociationDocument> ] ? ;
          <associations> @<GpadAssociation> *
       ) ;
       rdf:type [ <GpadAssociationDocument> ] ?
    )
}

<NamedThing>  (
    CLOSED {
       (  $<NamedThing_tes> rdf:type . * ;
          rdf:type [ <NamedThing> ]
       )
    } OR @<ControlledTerm> OR @<Provider>
)

<OntologyClass>  (
    CLOSED {
       (  $<OntologyClass_tes> (  &<ControlledTerm_tes> ;
             rdf:type [ <ControlledTerm> ] ?
          ) ;
          rdf:type [ <OntologyClass> ]
       )
    } OR @<Taxon>
)

<PropertyValuePair> CLOSED {
    (  $<PropertyValuePair_tes> (  <property> @<ControlledTerm> ? ;
          <value> @metatype:String ?
       ) ;
       rdf:type [ <PropertyValuePair> ] ?
    )
}

<Provider> CLOSED {
    (  $<Provider_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ?
       ) ;
       rdf:type [ <Provider> ]
    )
}

<RelationTerm> CLOSED {
    (  $<RelationTerm_tes> (  &<ControlledTerm_tes> ;
          rdf:type [ <ControlledTerm> ] ?
       ) ;
       rdf:type [ <RelationTerm> ]
    )
}

<Taxon> CLOSED {
    (  $<Taxon_tes> (  &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <Taxon> ]
    )
}



